
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PatientProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dob: 'dob',
  gender: 'gender',
  address: 'address',
  bloodGroup: 'bloodGroup',
  emergencyContact: 'emergencyContact'
};

exports.Prisma.DoctorProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  specialization: 'specialization',
  qualifications: 'qualifications',
  experienceYears: 'experienceYears',
  isAvailable: 'isAvailable'
};

exports.Prisma.PharmacistProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  pharmacyId: 'pharmacyId'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  appointmentTime: 'appointmentTime',
  status: 'status',
  symptoms: 'symptoms',
  consultationNotes: 'consultationNotes'
};

exports.Prisma.MedicalRecordScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  appointmentId: 'appointmentId',
  diagnosis: 'diagnosis',
  createdAt: 'createdAt'
};

exports.Prisma.PharmacyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  latitude: 'latitude',
  longitude: 'longitude',
  phone: 'phone',
  email: 'email',
  operatingHours: 'operatingHours',
  services: 'services',
  isActive: 'isActive',
  pharmacistId: 'pharmacistId'
};

exports.Prisma.MedicineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  genericName: 'genericName'
};

exports.Prisma.PharmacyStockScalarFieldEnum = {
  id: 'id',
  pharmacyId: 'pharmacyId',
  medicineId: 'medicineId',
  stockStatus: 'stockStatus'
};

exports.Prisma.MedicineBatchScalarFieldEnum = {
  id: 'id',
  pharmacyId: 'pharmacyId',
  medicineId: 'medicineId',
  batchNumber: 'batchNumber',
  quantity: 'quantity',
  expiryDate: 'expiryDate'
};

exports.Prisma.PrescriptionScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  pharmacyId: 'pharmacyId',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.PrescriptionItemScalarFieldEnum = {
  id: 'id',
  prescriptionId: 'prescriptionId',
  medicineId: 'medicineId',
  quantity: 'quantity',
  instructions: 'instructions',
  genericAllowed: 'genericAllowed'
};

exports.Prisma.DosageInstructionScalarFieldEnum = {
  id: 'id',
  prescriptionItemId: 'prescriptionItemId',
  languageCode: 'languageCode',
  text: 'text'
};

exports.Prisma.RefillReminderScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  medicineId: 'medicineId',
  schedule: 'schedule',
  nextRunAt: 'nextRunAt',
  active: 'active'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  payload: 'payload',
  targetUserId: 'targetUserId',
  targetRole: 'targetRole',
  createdAt: 'createdAt',
  readAt: 'readAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  PATIENT: 'PATIENT',
  DOCTOR: 'DOCTOR',
  PHARMACIST: 'PHARMACIST',
  ADMIN: 'ADMIN'
};

exports.AppointmentStatus = exports.$Enums.AppointmentStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.StockStatus = exports.$Enums.StockStatus = {
  IN_STOCK: 'IN_STOCK',
  LOW_STOCK: 'LOW_STOCK',
  OUT_OF_STOCK: 'OUT_OF_STOCK'
};

exports.PrescriptionStatus = exports.$Enums.PrescriptionStatus = {
  PENDING: 'PENDING',
  DISPENSED: 'DISPENSED'
};

exports.Prisma.ModelName = {
  User: 'User',
  PatientProfile: 'PatientProfile',
  DoctorProfile: 'DoctorProfile',
  PharmacistProfile: 'PharmacistProfile',
  Appointment: 'Appointment',
  MedicalRecord: 'MedicalRecord',
  Pharmacy: 'Pharmacy',
  Medicine: 'Medicine',
  PharmacyStock: 'PharmacyStock',
  MedicineBatch: 'MedicineBatch',
  Prescription: 'Prescription',
  PrescriptionItem: 'PrescriptionItem',
  DosageInstruction: 'DosageInstruction',
  RefillReminder: 'RefillReminder',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\yasin\\VSCODE\\SIH\\TelMed\\server\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "binary"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows"
      },
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\yasin\\VSCODE\\SIH\\TelMed\\server\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  binaryTargets = [\"windows\", \"native\"]\n  engineType    = \"binary\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  PATIENT\n  DOCTOR\n  PHARMACIST\n  ADMIN\n}\n\nenum AppointmentStatus {\n  PENDING\n  CONFIRMED\n  COMPLETED\n  CANCELLED\n}\n\nenum StockStatus {\n  IN_STOCK\n  LOW_STOCK\n  OUT_OF_STOCK\n}\n\nenum PrescriptionStatus {\n  PENDING\n  DISPENSED\n}\n\nmodel User {\n  id        String   @id @default(uuid())\n  email     String   @unique\n  password  String\n  role      Role\n  firstName String\n  lastName  String\n  phone     String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  patientProfile    PatientProfile?\n  doctorProfile     DoctorProfile?\n  pharmacistProfile PharmacistProfile?\n}\n\nmodel PatientProfile {\n  id               String   @id @default(uuid())\n  userId           String   @unique\n  dob              DateTime\n  gender           String\n  address          String\n  bloodGroup       String\n  emergencyContact String\n\n  user User @relation(fields: [userId], references: [id])\n\n  appointments   Appointment[]    @relation(\"PatientAppointments\")\n  medicalRecords MedicalRecord[]\n  Prescription   Prescription[]\n  RefillReminder RefillReminder[]\n}\n\nmodel DoctorProfile {\n  id              String  @id @default(uuid())\n  userId          String  @unique\n  specialization  String\n  qualifications  String\n  experienceYears Int\n  isAvailable     Boolean @default(true)\n\n  user User @relation(fields: [userId], references: [id])\n\n  appointments   Appointment[]   @relation(\"DoctorAppointments\")\n  medicalRecords MedicalRecord[]\n  Prescription   Prescription[]\n}\n\nmodel PharmacistProfile {\n  id         String    @id @default(uuid())\n  userId     String    @unique\n  user       User      @relation(fields: [userId], references: [id])\n  pharmacyId String?   @unique // A pharmacist is linked to one pharmacy\n  pharmacy   Pharmacy? @relation(fields: [pharmacyId], references: [id])\n}\n\nmodel Appointment {\n  id                String            @id @default(uuid())\n  patientId         String\n  doctorId          String\n  appointmentTime   DateTime\n  status            AppointmentStatus @default(PENDING)\n  symptoms          String\n  consultationNotes String?\n\n  patient        PatientProfile  @relation(\"PatientAppointments\", fields: [patientId], references: [id])\n  doctor         DoctorProfile   @relation(\"DoctorAppointments\", fields: [doctorId], references: [id])\n  medicalRecords MedicalRecord[]\n}\n\nmodel MedicalRecord {\n  id            String   @id @default(uuid())\n  patientId     String\n  doctorId      String\n  appointmentId String\n  diagnosis     String\n  createdAt     DateTime @default(now())\n\n  patient     PatientProfile @relation(fields: [patientId], references: [id])\n  doctor      DoctorProfile  @relation(fields: [doctorId], references: [id])\n  appointment Appointment    @relation(fields: [appointmentId], references: [id])\n}\n\nmodel Pharmacy {\n  id             String  @id @default(uuid())\n  name           String\n  address        String\n  city           String?\n  state          String?\n  pincode        String?\n  latitude       Float\n  longitude      Float\n  phone          String?\n  email          String?\n  operatingHours Json? // Store operating hours as JSON\n  services       Json? // Store services as JSON array\n  isActive       Boolean @default(true)\n  pharmacistId   String? @unique // CHANGED: A pharmacy has one pharmacist\n\n  pharmacist    PharmacistProfile? // CHANGED: Now correctly relates to PharmacistProfile\n  stocks        PharmacyStock[]\n  MedicineBatch MedicineBatch[]\n  prescriptions Prescription[] // ADDED: Relation to incoming prescriptions\n}\n\nmodel Medicine {\n  id          String @id @default(uuid())\n  name        String\n  genericName String\n\n  stocks           PharmacyStock[]\n  MedicineBatch    MedicineBatch[]\n  PrescriptionItem PrescriptionItem[]\n  RefillReminder   RefillReminder[]\n}\n\nmodel PharmacyStock {\n  id          String      @id @default(uuid())\n  pharmacyId  String\n  medicineId  String\n  stockStatus StockStatus\n\n  pharmacy Pharmacy @relation(fields: [pharmacyId], references: [id])\n  medicine Medicine @relation(fields: [medicineId], references: [id])\n\n  @@unique([pharmacyId, medicineId])\n}\n\n// Track inventory by batches with expiry and quantities\nmodel MedicineBatch {\n  id          String   @id @default(uuid())\n  pharmacyId  String\n  medicineId  String\n  batchNumber String\n  quantity    Int\n  expiryDate  DateTime\n\n  pharmacy Pharmacy @relation(fields: [pharmacyId], references: [id])\n  medicine Medicine @relation(fields: [medicineId], references: [id])\n}\n\n// E-prescriptions created by doctors for patients\nmodel Prescription {\n  id         String             @id @default(uuid())\n  patientId  String\n  doctorId   String\n  pharmacyId String? // ADDED: Foreign key to link to a pharmacy\n  status     PrescriptionStatus @default(PENDING)\n  createdAt  DateTime           @default(now())\n\n  patient  PatientProfile     @relation(fields: [patientId], references: [id])\n  doctor   DoctorProfile      @relation(fields: [doctorId], references: [id])\n  pharmacy Pharmacy?          @relation(fields: [pharmacyId], references: [id]) // ADDED: Relation to the assigned pharmacy\n  items    PrescriptionItem[]\n}\n\nmodel PrescriptionItem {\n  id             String  @id @default(uuid())\n  prescriptionId String\n  medicineId     String\n  quantity       Int\n  instructions   String?\n  genericAllowed Boolean @default(true)\n\n  prescription       Prescription        @relation(fields: [prescriptionId], references: [id])\n  medicine           Medicine            @relation(fields: [medicineId], references: [id])\n  dosageInstructions DosageInstruction[]\n}\n\n// Multilingual dosage text per prescription item\nmodel DosageInstruction {\n  id                 String @id @default(uuid())\n  prescriptionItemId String\n  languageCode       String\n  text               String\n\n  prescriptionItem PrescriptionItem @relation(fields: [prescriptionItemId], references: [id])\n}\n\n// Refill reminders configured for chronic patients\nmodel RefillReminder {\n  id         String    @id @default(uuid())\n  patientId  String\n  medicineId String\n  schedule   String // cron-like or human readable schedule\n  nextRunAt  DateTime?\n  active     Boolean   @default(true)\n\n  patient  PatientProfile @relation(fields: [patientId], references: [id])\n  medicine Medicine       @relation(fields: [medicineId], references: [id])\n}\n\n// Generic notification entity for in-app alerts\nmodel Notification {\n  id           String    @id @default(uuid())\n  type         String\n  payload      Json\n  targetUserId String?\n  targetRole   Role?\n  createdAt    DateTime  @default(now())\n  readAt       DateTime?\n}\n",
  "inlineSchemaHash": "e64818e5a17cd75030531ad26bca70249b5928013ab667f2e0163bb3f09b9c6b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"PatientProfileToUser\"},{\"name\":\"doctorProfile\",\"kind\":\"object\",\"type\":\"DoctorProfile\",\"relationName\":\"DoctorProfileToUser\"},{\"name\":\"pharmacistProfile\",\"kind\":\"object\",\"type\":\"PharmacistProfile\",\"relationName\":\"PharmacistProfileToUser\"}],\"dbName\":null},\"PatientProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bloodGroup\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientProfileToUser\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"PatientAppointments\"},{\"name\":\"medicalRecords\",\"kind\":\"object\",\"type\":\"MedicalRecord\",\"relationName\":\"MedicalRecordToPatientProfile\"},{\"name\":\"Prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PatientProfileToPrescription\"},{\"name\":\"RefillReminder\",\"kind\":\"object\",\"type\":\"RefillReminder\",\"relationName\":\"PatientProfileToRefillReminder\"}],\"dbName\":null},\"DoctorProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualifications\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experienceYears\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DoctorProfileToUser\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"DoctorAppointments\"},{\"name\":\"medicalRecords\",\"kind\":\"object\",\"type\":\"MedicalRecord\",\"relationName\":\"DoctorProfileToMedicalRecord\"},{\"name\":\"Prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"DoctorProfileToPrescription\"}],\"dbName\":null},\"PharmacistProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PharmacistProfileToUser\"},{\"name\":\"pharmacyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pharmacy\",\"kind\":\"object\",\"type\":\"Pharmacy\",\"relationName\":\"PharmacistProfileToPharmacy\"}],\"dbName\":null},\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"symptoms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consultationNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"PatientAppointments\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"DoctorProfile\",\"relationName\":\"DoctorAppointments\"},{\"name\":\"medicalRecords\",\"kind\":\"object\",\"type\":\"MedicalRecord\",\"relationName\":\"AppointmentToMedicalRecord\"}],\"dbName\":null},\"MedicalRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"MedicalRecordToPatientProfile\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"DoctorProfile\",\"relationName\":\"DoctorProfileToMedicalRecord\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToMedicalRecord\"}],\"dbName\":null},\"Pharmacy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pincode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operatingHours\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"services\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pharmacistId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pharmacist\",\"kind\":\"object\",\"type\":\"PharmacistProfile\",\"relationName\":\"PharmacistProfileToPharmacy\"},{\"name\":\"stocks\",\"kind\":\"object\",\"type\":\"PharmacyStock\",\"relationName\":\"PharmacyToPharmacyStock\"},{\"name\":\"MedicineBatch\",\"kind\":\"object\",\"type\":\"MedicineBatch\",\"relationName\":\"MedicineBatchToPharmacy\"},{\"name\":\"prescriptions\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PharmacyToPrescription\"}],\"dbName\":null},\"Medicine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"genericName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stocks\",\"kind\":\"object\",\"type\":\"PharmacyStock\",\"relationName\":\"MedicineToPharmacyStock\"},{\"name\":\"MedicineBatch\",\"kind\":\"object\",\"type\":\"MedicineBatch\",\"relationName\":\"MedicineToMedicineBatch\"},{\"name\":\"PrescriptionItem\",\"kind\":\"object\",\"type\":\"PrescriptionItem\",\"relationName\":\"MedicineToPrescriptionItem\"},{\"name\":\"RefillReminder\",\"kind\":\"object\",\"type\":\"RefillReminder\",\"relationName\":\"MedicineToRefillReminder\"}],\"dbName\":null},\"PharmacyStock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pharmacyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stockStatus\",\"kind\":\"enum\",\"type\":\"StockStatus\"},{\"name\":\"pharmacy\",\"kind\":\"object\",\"type\":\"Pharmacy\",\"relationName\":\"PharmacyToPharmacyStock\"},{\"name\":\"medicine\",\"kind\":\"object\",\"type\":\"Medicine\",\"relationName\":\"MedicineToPharmacyStock\"}],\"dbName\":null},\"MedicineBatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pharmacyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pharmacy\",\"kind\":\"object\",\"type\":\"Pharmacy\",\"relationName\":\"MedicineBatchToPharmacy\"},{\"name\":\"medicine\",\"kind\":\"object\",\"type\":\"Medicine\",\"relationName\":\"MedicineToMedicineBatch\"}],\"dbName\":null},\"Prescription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pharmacyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PrescriptionStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"PatientProfileToPrescription\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"DoctorProfile\",\"relationName\":\"DoctorProfileToPrescription\"},{\"name\":\"pharmacy\",\"kind\":\"object\",\"type\":\"Pharmacy\",\"relationName\":\"PharmacyToPrescription\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"PrescriptionItem\",\"relationName\":\"PrescriptionToPrescriptionItem\"}],\"dbName\":null},\"PrescriptionItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"genericAllowed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PrescriptionToPrescriptionItem\"},{\"name\":\"medicine\",\"kind\":\"object\",\"type\":\"Medicine\",\"relationName\":\"MedicineToPrescriptionItem\"},{\"name\":\"dosageInstructions\",\"kind\":\"object\",\"type\":\"DosageInstruction\",\"relationName\":\"DosageInstructionToPrescriptionItem\"}],\"dbName\":null},\"DosageInstruction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescriptionItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languageCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescriptionItem\",\"kind\":\"object\",\"type\":\"PrescriptionItem\",\"relationName\":\"DosageInstructionToPrescriptionItem\"}],\"dbName\":null},\"RefillReminder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schedule\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"PatientProfileToRefillReminder\"},{\"name\":\"medicine\",\"kind\":\"object\",\"type\":\"Medicine\",\"relationName\":\"MedicineToRefillReminder\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"targetUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetRole\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

